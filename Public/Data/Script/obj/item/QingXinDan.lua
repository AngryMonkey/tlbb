--注意：

--物品技能的逻辑只能使用基础技能和脚本来实现

--脚本:

--以下是脚本样例:


--3151.lua
------------------------------------------------------------------------------------------
--一般物品的默认脚本

--脚本号
x300055_g_scriptId = 300055 --临时写这个,真正用的时候一定要改.

--需要的等级

--效果的ID
x300055_g_Impact1 = 3151 --临时写这个
x300055_g_Impact2 = -1 --不用

--**********************************
--事件交互入口
--**********************************
function x300055_OnDefaultEvent( sceneId, selfId, bagIndex )
-- 不需要这个接口，但要保留空函数
end

--**********************************
--这个物品的使用过程是否类似于技能：
--系统会在执行开始时检测这个函数的返回值，如果返回失败则忽略后面的类似技能的执行。
--返回1：技能类似的物品，可以继续类似技能的执行；返回0：忽略后面的操作。
--**********************************
function x300055_IsSkillLikeScript( sceneId, selfId)
	return 1; --这个脚本需要动作支持
end

--**********************************
--直接取消效果：
--系统会直接调用这个接口，并根据这个函数的返回值确定以后的流程是否执行。
--返回1：已经取消对应效果，不再执行后续操作；返回0：没有检测到相关效果，继续执行。
--**********************************
function x300055_CancelImpacts( sceneId, selfId )
	return 0; --不需要这个接口，但要保留空函数,并且始终返回0。
end

--**********************************
--条件检测入口：
--系统会在技能检测的时间点调用这个接口，并根据这个函数的返回值确定以后的流程是否执行。
--返回1：条件检测通过，可以继续执行；返回0：条件检测失败，中断后续执行。
--**********************************
function x300055_OnConditionCheck( sceneId, selfId )
	
	if sceneId ~= 0 and sceneId ~= 1 and sceneId ~= 2 and sceneId ~= 186 then
		x300055_NotifyTip( sceneId, selfId, "#{QingXinDan_Limit_00}");
		return 0;
	end
	
	local nPkValue = LuaFnGetHumanPKValue(sceneId, selfId);
	if nPkValue <= 0 then
		x300055_NotifyTip( sceneId, selfId, "#{QingXinDan_00}");
		return 0;
	end
	
	--校验使用的物品
	if(1~=LuaFnVerifyUsedItem(sceneId, selfId)) then
		return 0
	end
	return 1; --不需要任何条件，并且始终返回1。
end

--**********************************
--消耗检测及处理入口：
--系统会在技能消耗的时间点调用这个接口，并根据这个函数的返回值确定以后的流程是否执行。
--返回1：消耗处理通过，可以继续执行；返回0：消耗检测失败，中断后续执行。
--注意：这不光负责消耗的检测也负责消耗的执行。
--**********************************
function x300055_OnDeplete( sceneId, selfId )
	if(0<LuaFnDepletingUsedItem(sceneId, selfId)) then		
		
		local nPkValue = LuaFnGetHumanPKValue(sceneId, selfId);
		
		local msg = format("您的杀气下降了1点，您现在的杀气为%d", nPkValue-1);
		x300055_NotifyTip( sceneId, selfId, msg);
		
		LuaFnSetHumanPKValue(sceneId,selfId, nPkValue - 1);	

		-- [ QUFEI 2007-11-09 15:36 UPDATE BugID 27611 ]		
		local LogInfo	= format( "[ChangePKValue]:QingXinDan sceneId=%d, GUID=%0X, ItemID=%d, PKValueBgn=%d, PKValueEnd=%d",
				sceneId,
				LuaFnObjId2Guid( sceneId, selfId ),
				30008018,
				nPkValue,
				LuaFnGetHumanPKValue(sceneId, selfId) )
		WriteCheckLog( sceneId, selfId, LogInfo )
		
		return 1;
	
	end
	return 0;
end

--**********************************
--只会执行一次入口：
--聚气和瞬发技能会在消耗完成后调用这个接口（聚气结束并且各种条件都满足的时候），而引导
--技能也会在消耗完成后调用这个接口（技能的一开始，消耗成功执行之后）。
--返回1：处理成功；返回0：处理失败。
--注：这里是技能生效一次的入口
--**********************************
function x300055_OnActivateOnce( sceneId, selfId )
	
	return 1;
end

--**********************************
--引导心跳处理入口：
--引导技能会在每次心跳结束时调用这个接口。
--返回：1继续下次心跳；0：中断引导。
--注：这里是技能生效一次的入口
--**********************************
function x300055_OnActivateEachTick( sceneId, selfId)
	return 1; --不是引导性脚本, 只保留空函数.
end


--**********************************
--醒目提示
--**********************************
function x300055_NotifyTip( sceneId, selfId, msg )

	BeginEvent( sceneId )
		AddText( sceneId, msg )
	EndEvent( sceneId )
	DispatchMissionTips( sceneId, selfId )

end
